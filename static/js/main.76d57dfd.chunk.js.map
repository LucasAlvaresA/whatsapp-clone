{"version":3,"sources":["components/ChatListItem/index.js","components/ChatIntro/index.js","components/MessageItem/index.js","components/ChatWindow/index.js","components/NewChat/index.js","App.js","index.js"],"names":["ChatListItem","onClick","active","data","className","src","image","alt","title","chatIntro","MessageItem","user","style","justifyContent","id","author","backgroundColor","body","ChatWindow","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","undefined","useState","emojiOpen","setEmojiOpen","text","setText","listening","setListening","list","useEffect","current","scrollHeight","offsetHeight","scrollTop","color","ref","map","item","key","height","onEmojiClick","e","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","width","placeholder","type","value","onChange","target","onStart","onend","onresult","results","transcript","start","NewChat","chatlist","show","setShow","avatar","name","handleClose","left","App","chatId","activeChat","setActiveChat","showNewChat","setShowNewChat","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d57dfd.chunk.js","sourcesContent":["import React from 'react';\nimport \"./ChatListItem.css\";\n\nexport default function ChatListItem({onClick, active, data}) {\n return (\n    <div \n        className={`chatListItem ${active ? \"active\" : \"\"}`}\n        onClick={onClick}\n    >\n        <img className=\"chatListItem--avatar\" src={data.image} alt=\"\" />\n        <div className=\"chatListItem--lines\">\n            <div className=\"chatListItem-line\">\n                <div className=\"chatListItem--name\">{data.title}</div>\n                <div className=\"chatListItem--date\">19:00</div>\n            </div>\n            <div className=\"chatListItem-line\">\n                <div className=\"chatListItem--lastMsg\">\n                    <p>Oi,estou sim,e você?</p>\n                </div>\n            </div>\n        </div>\n    </div>\n );\n}","import React from 'react';\nimport \"./ChatIntro.css\";\n\nexport default function chatIntro() {\n return (\n   <div className=\"chatIntro\">\n       <img src=\"https://web.whatsapp.com/img/intro-connection-light_c98cc75f2aa905314d74375a975d2cf2.jpg\" alt=\"\" />\n       <h1>Mantenha seu celular conectado</h1>\n       <h2>O WhatsApp conecta ao seu telefone para sincronizar suas mensagens<br/>Para reduzir o uso de dados, conecte seu telefone a uma rede Wi-Fi.</h2>\n   </div>\n );\n}","import React from 'react';\nimport \"./MessageItem.css\";\n\nexport default function MessageItem({data, user}) {\n return (\n   <div \n    className=\"messageline\"\n    style={{\n        justifyContent: user.id === data.author ? \"flex-end\" : \"flex-start\"\n    }}\n   >\n       <div \n        className=\"messageItem\"\n        style={{\n            backgroundColor: user.id === data.author ? \"#DCF8C6\" : \"#FFF\"\n        }}\n       >\n           <div className=\"messageText\">{data.body}</div>\n            <div className=\"messageDate\">19:00</div>\n       </div>\n   </div>\n );\n}","import React, { useState, useEffect, useRef } from 'react';\nimport EmojiPicker from \"emoji-picker-react\";\nimport \"./ChatWindow.css\";\n\nimport MessageItem from \"../MessageItem\";\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport MicIcon from '@material-ui/icons/Mic';\n// import { EmojiObjects } from '@material-ui/icons';\n\nexport default function ChatWindow({user}) {\n\n  const body = useRef();\n\n  // Funcionamento do mic\n\n let recognition = null;\n let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n if(SpeechRecognition !== undefined ) {\n      recognition = new SpeechRecognition();\n }\n\n const [emojiOpen, setEmojiOpen] = useState(false);\n const [text, setText] = useState(\"\");\n const [listening, setListening] = useState(false);\n const [list] = useState([\n    {author:123, body: \"Olá!\"},\n    {author:123, body: \"Tudo Bem?\"},\n    {author:1234, body: \"Oi,estou sim,e você?\"},\n ]);\n\n useEffect(()=>{\n    if(body.current.scrollHeight > body.current.offsetHeight) {\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\n    }\n }, [list]);\n\n const handleEmojiClick = (e, emojiObject) => {\n    setText( text + emojiObject.emoji);\n }\n\n const handleOpenEmoji = () => {\n   setEmojiOpen(true);\n }\n\n const handleCloseEmoji = () => {\n  setEmojiOpen(false);\n }\n\n const handleMicClick = () => {\n  if(recognition !== null) {\n\n      recognition.onStart = () => {\n        setListening(true);\n      }\n      recognition.onend = () => {\n        setListening(false);\n      }\n      recognition.onresult = (e) => {\n        setText( e.results[0][0].transcript);\n      }\n\n      recognition.start();\n  }\n }\n\n const handleSendClick = () => {\n\n }\n\n return (\n   <div className=\"chatWindow\">\n       <div className=\"chatWindow--header\">\n\n          <div className=\"chatWindow--headerinfo\">\n            <img className=\"chatWindow--avatar\" src=\"https://www.w3schools.com/w3images/avatar6.png\" alt=\"\" />\n            <div className=\"chatWindow--name\">Usuario 1</div>\n          </div>\n\n          <div className=\"chatWindow--headerbuttons\">\n\n            <div className=\"chatWindow--btn\">\n              <SearchIcon style={{color: \"#919191\"}} /> \n            </div>\n\n            <div className=\"chatWindow--btn\">\n              <AttachFileIcon style={{color: \"#919191\"}} /> \n            </div>\n\n            <div className=\"chatWindow--btn\">\n              <MoreVertIcon style={{color: \"#919191\"}} /> \n            </div>\n\n          </div>\n\n       </div>\n\n       <div ref={body} className=\"chatWindow-body\">\n            {list.map((item, key)=>(\n              <MessageItem\n                  key={key}\n                  data={item}\n                  user={user}\n              />\n            ))}\n       </div>\n\n       <div \n        className=\"chatWindow--emojiarea\"\n        style={{height: emojiOpen ? \"200px\" : \"0px\"}}>\n         <EmojiPicker\n            onEmojiClick={handleEmojiClick}\n            disableSearchBar\n            disableSkinTonePicker\n         />\n       </div>\n\n       <div className=\"chatWindow--footer\">\n\n          <div className=\"chatWindow--pre\">\n\n            <div \n              className=\"chatWindow--btn\"\n              onClick={handleCloseEmoji}\n              style={{width: emojiOpen?40:0}}\n            >\n              <CloseIcon style={{color: \"#919191\"}} /> \n            </div>\n\n            <div \n              className=\"chatWindow--btn\"\n              onClick={handleOpenEmoji}\n            >\n              <InsertEmoticonIcon style={{color: emojiOpen?\"#009688\":\"#919191\"}} /> \n            </div>\n\n          </div>\n\n          <div className=\"chatWindow--inputarea\">\n              <input \n                placeholder=\"Digite uma mensagem...\"\n                className=\"chatWindow--input\" \n                type=\"text\" \n                value={text}\n                onChange={e=>setText(e.target.value)}\n              />\n          </div>\n\n          <div className=\"chatWindow--pos\">\n            \n            {text === \"\" &&\n              <div onClick={handleMicClick} className=\"chatWindow--btn\">\n                <MicIcon style={{color: listening ? \"#126ECE\" :\"#919191\"}} /> \n              </div>\n            }\n            {text !== \"\" &&\n              <div onClick={handleSendClick} className=\"chatWindow--btn\">\n                <SendIcon style={{color: \"#919191\"}} /> \n              </div>\n            }\n          </div>\n\n\n       </div>\n   </div>\n );\n}","import React, { useState } from 'react';\nimport \"./NewChat.css\"\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nexport default function NewChat({user, chatlist, show, setShow}) {\n\n    const [list] = useState([\n        {id: 1,avatar: \"https://www.w3schools.com/w3images/avatar6.png\",name: \"Usuario 1\"},\n        {id: 2,avatar: \"https://www.w3schools.com/w3images/avatar2.png\",name: \"Usuario 2\"},\n        {id: 3,avatar: \"https://www.w3schools.com/w3images/avatar5.png\",name: \"Usuario 3\"},\n        {id: 4,avatar: \"https://www.w3schools.com/howto/img_avatar.png\",name: \"Usuario 4\"}\n    ]);\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    return (\n    <div className=\"newChat\" style={{left: show?0:-415}}>\n        <div className=\"newChat--head\">\n                <div  onClick={handleClose} className=\"newChat--backbutton\">\n                    <ArrowBackIcon style={{color: \"#FFFFFF\"}}/>\n                </div>\n                <div className=\"newChat--headtitle\">Nova Conversa</div>\n        </div>\n        <div  onClick={handleClose} className=\"newChat--list\">\n                {list.map((item, key)=>(\n                    <div className=\"newChat--item\" key={key}>\n                        <img className=\"newChat--itemavatar\" src={item.avatar} alt=\"\"/>\n                        <div className=\"newChat--itemname\">{item.name}</div>\n                    </div>\n                ))}\n        </div>\n    </div>\n    );\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport ChatListItem from \"./components/ChatListItem\";\nimport ChatIntro from \"./components/ChatIntro\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport NewChat from \"./components/NewChat\";\n\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nexport default function App() {\n    const [chatlist] = useState([\n        {\n            chatId: 1,\n            title: \"Usuario 1\",\n            image: \"https://www.w3schools.com/w3images/avatar6.png\",\n        },\n        // {chatId: 2, title: \"Usuario 2\", image: \"https://www.w3schools.com/w3images/avatar2.png\"},\n        // {chatId: 3, title: \"Usuario 3\", image: \"https://www.w3schools.com/w3images/avatar5.png\"},\n        // {chatId: 4, title: \"Usuario 4\", image: \"https://www.w3schools.com/howto/img_avatar.png\"},\n    ]);\n    const [activeChat, setActiveChat] = useState({});\n    const [user] = useState({\n        id: 1234,\n        avatar: \"https://www.w3schools.com/howto/img_avatar2.png\",\n        name: \"Usuario Logado\",\n    });\n\n    const [showNewChat, setShowNewChat] = useState(false);\n\n    const handleNewChat = () => {\n        setShowNewChat(true);\n    };\n\n    return (\n        <HashRouter>\n            <div className=\"app-window\">\n                <div className=\"sidebar\">\n                    <NewChat\n                        chatlist={chatlist}\n                        user={user}\n                        show={showNewChat}\n                        setShow={setShowNewChat}\n                    />\n                    <header>\n                        <img\n                            className=\"header--avatar\"\n                            src={user.avatar}\n                            alt=\"\"\n                        />\n                        <div className=\"header--buttons\">\n                            <div className=\"header--btn\">\n                                <DonutLargeIcon style={{ color: \"#919191\" }} />\n                            </div>\n                            <div\n                                onClick={handleNewChat}\n                                className=\"header--btn\"\n                            >\n                                <ChatIcon style={{ color: \"#919191\" }} />\n                            </div>\n                            <div className=\"header--btn\">\n                                <MoreVertIcon style={{ color: \"#919191\" }} />\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"search\">\n                        <div className=\"search--input\">\n                            <SearchIcon\n                                fontSize=\"small\"\n                                style={{ color: \"#919191\" }}\n                            />\n                            <input\n                                type=\"search\"\n                                placeholder=\"Procurar ou começar uma nova conversa\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"chatlist\">\n                        {chatlist.map((item, key) => (\n                            <ChatListItem\n                                key={key}\n                                data={item}\n                                active={\n                                    activeChat.chatId === chatlist[key].chatId\n                                }\n                                onClick={() => setActiveChat(chatlist[key])}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"contentarea\">\n                    {activeChat.chatId !== undefined && (\n                        <ChatWindow user={user} />\n                    )}\n\n                    {activeChat.chatId === undefined && <ChatIntro />}\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}